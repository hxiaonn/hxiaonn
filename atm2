#include<stdio.h>
#include<windows.h>
#include<string.h>
int control=1;                    //控制结束的变量 
int order=1;                      //控制顺序的变量
char password2[7];                //输入密码字符串 
int confirmpassword[45];          //确认用的密码    
int menu(int a);                  //菜单 
void authoring();                 //创建用户
void cunquan();                //存钱 
void qukuan();                 //取钱  
void chaoxun();                   //查询  
void zhuanzhang();               //转账 
void lose();                      //挂失
void undo();                      //解挂
void xiaohu();                 //销户
void xiugai();           //改密
void tuichu();                     //退出
int judge_exist(int a);           //判断用户名存在  输入用户名，若存在返回用户名的值，若不存在输出提示并返回0
int judge_status(int a);          //判断用户状态    输入用户名，若正常返回0，若挂失返回1并提示，若冻结返回2并提示
 
struct Account
{
	int    account;            //账号
	char    username[10];      //用户名
	char    password[7];           //密码
	char    num[12];           //电话号码
	char    id[19];            //身份证号 
	double money;              //钱
	int    status;             //状态：0正常 1挂失 2销户
};
struct Account zh[45];       //创建45个用户
 
int main()
{
	int j=1,a;
	for(j=1;j<=10;j++)
	{
		zh[j].money=0;
		zh[j].status=0;
	}	
	while(control==1)
	{
		system("color F0"); //设置终端颜色，即本银行界面颜色 
		system("cls");
    printf("                  ▂▃▅▆▇█████▇▆▅▃▂                 \n");
 	printf("☆ =========================================================== ☆\n");
 	printf("                         欢迎使用小小银行                        \n");
 	printf("                        无卡自主ATM服务系统                      \n");
 	printf("☆ =========================================================== ☆\n");
	printf("                         请选择你的操作\n");
	printf("\n");
	printf("                     1，开户  2，存款  3，取款   \n");
	printf("                     4，查询  5，转账  6，挂失   \n");
	printf("                     7，解挂  8，销户  9，改密   \n");
	printf("                     10，退出\n");
	printf("\n");
	printf("===============================================================  \n");
	printf("                         选择的操作为：");
	scanf("%d",&a);
	menu(a);
	}
	return 0;
}
 
int menu(int a)
{
	switch(a)
	{
	case 1:system("cls");
	       authoring();;break;
	case 2:system("cls");
	       cunquan();break;
	case 3:system("cls");
       	   qukuan();break;
	case 4:system("cls");
	       chaoxun();break;
	case 5:system("cls");
	       zhuanzhang();break;
	case 6:system("cls");
	       lose();break;
	case 7:system("cls");
	       undo();break;
	case 8:system("cls");
	       xiaohu();break;
	case 9:system("cls");
	       xiugai();break;
	case 10:system("cls");
	        tuichu();break;
	}
	return 0;
}
 
void authoring()
{
	int i=0;
	char digitFlag='1';//身份证数字标记   ‘0’不是数字；‘1’全部是数字
	zh[order].account=100+order;
	printf("                  ▂▃▅▆▇█████▇▆▅▃▂                 \n");
 	printf("☆ =========================================================== ☆\n");
 	printf("                         欢迎使用小小银行                        \n");
 	printf("                        无卡自主ATM服务系统                      \n");
 	printf("☆ =========================================================== ☆\n");
	printf("                           正在开户.....\n");
	printf("\n");
	printf("                           账号:%d\n",zh[order].account);
	while(1)
	{
		printf("                           输入户主姓名:");
		scanf("%s",&zh[order].username);
		printf("\n");
		//    验证输入的姓名信息是否合法
		if(strlen(zh[order].username)<1||strlen(zh[order].username)>10)
		{
			printf("账户名称长度需在1到10之间，请重新输入！");
			continue;
		}
		printf("                           输入户主电话:");
        scanf("%s",&zh[order].num);
	    printf("\n");
	    //默认手机号码全是数字
		digitFlag='1';
		//如果 手机号码不是11位，返回去重新输入
		//			   是11位，继续执行；
		if(strlen(zh[order].num)!=11)
		{
			printf("\t\t\t手机号码长度只能11位，请重新输入！");
			printf("\n");
			continue;
		}
		//判断手机号是否全部是数字
		for(i=0;i<11;i++)
		{
			if(zh[order].num[i]<'0'||zh[order].num[i]>'9')
			digitFlag='0';
		}
		//如果 手机号码 不是数字，返回去重新输入；
		//		          全部是数字，继续执行；
		if(digitFlag=='0')
		{
			printf("\t\t\t手机号码必须是数字，请重新输入！");
			printf("\n");
			continue;
		}
		printf("                           请输入身份证号:");
	    scanf("%s",&zh[order].id);
    	printf("\n");
		// 身份证号码 
		// 身份证号码必须是17位数字，第18位可以是数字或字符
		if(strlen(zh[order].id)<1||strlen(zh[order].id)>18)
		{
			printf("\t\t\t身份证号码长度只能18位，请重新输入！");
			printf("\n");
			continue;
		}
		//身份证号码前17位必须是数字
		//通过数字标记，判断身份证号码是否全部是数字 
		//                     ‘0’不是数字；‘1’全部是数字
        digitFlag='1';
		for(i=0;i<18;i++)
		{
			//isdigit(ch)
			if(zh[order].id[i]<'0'||zh[order].id[i]>'9')
			{
				digitFlag='0';
				break;
			}
		}
		//如果 身份证号码 不是数字，返回去重新输入；
		//		          全部是数字，继续执行；
		if(digitFlag=='0')
		{
			printf("\t\t\t身份证号码前17位必须是数字，请重新输入！");
			printf("\n");
			continue;//返回重新输入
		}
    	//将输入的身份证后六位作为初始密码保存
        zh[order].password[0]=zh[order].id[12];
        zh[order].password[1]=zh[order].id[13];
        zh[order].password[2]=zh[order].id[14];
        zh[order].password[3]=zh[order].id[15];
        zh[order].password[4]=zh[order].id[16];
        zh[order].password[5]=zh[order].id[17];
        order++;
        break;
	}
	system("pause");
}
 
void cunquan()
{
	int exist2,status2,account2,order2,i;
	double money2;
	printf("                  ▂▃▅▆▇█████▇▆▅▃▂                 \n");
 	printf("☆ =========================================================== ☆\n");
 	printf("                         欢迎使用小小银行                        \n");
 	printf("                        无卡自主ATM服务系统                      \n");
 	printf("☆ =========================================================== ☆\n");
	printf("                         请输入你的账号:");
	scanf("%d",&account2);
	printf("\n");
	exist2=judge_exist(account2);
	if(exist2!=0)
	{
		order2=account2-100;
		status2=judge_status(zh[order2].status);
	
			i=0;
		    if(status2==0)
		    {
                printf("                         请输入密码:");
			    scanf("%s",password2);
			    printf("\n");
			    if(strcmp(password2,zh[order2].password)==0)
			    {
                    printf("                         户主姓名:%s\n",zh[order2].username);
                    printf("\n");
				    while(1)
				    {
				    	printf("                         请输入存款金额：");
				    	scanf("%lf",&money2);
				        printf("\n");
				        if(money2>0)
				        {
				        	zh[order2].money=zh[order2].money+money2;
				        	printf("                         你当前的余额为:%lf\n\n",zh[order2].money);
				        	break;
						}
						else
						{
							printf("                    输入金额必须大于0，请重新输入\n\n");
							continue;
						}
					}
			    }
			    else
		       {
                    printf("                         密码错误\n\n");
	        	}
		
		    }

	}
	system("pause");
}
 
void qukuan()
{
	int exist2,status2,account2,order2;
	double money2;
    printf("                  ▂▃▅▆▇█████▇▆▅▃▂                 \n");
 	printf("☆ =========================================================== ☆\n");
 	printf("                         欢迎使用小小银行                        \n");
 	printf("                        无卡自主ATM服务系统                      \n");
 	printf("☆ =========================================================== ☆\n");
	printf("                         请输入你的账号：");
	scanf("%d",&account2);
	printf("\n");
	exist2=judge_exist(account2);
	if(exist2!=0)
	{
		order2=account2-100;
		status2=judge_status(zh[order2].status);
		if(status2==0)
		{
    printf("                         请输入密码:");
			scanf("%s",password2);
			printf("\n");
			if(strcmp(password2,zh[order2].password)==0)
			{
    printf("                         户主姓名:%s\n",zh[order2].username);
    printf("\n");
    printf("                         请输入取款金额：");
				scanf("%lf",&money2);
				printf("\n");
				zh[order2].money=zh[order2].money-money2;
				if(zh[order2].money>=0)
				{
    printf("                   取款成功,你当前的余额为:%lf\n\n",zh[order2].money);
				}
				else
				{
	printf("                         余额不足取款失败\n\n");
					zh[order2].money=zh[order2].money+money2;
				}
			}
			else
			{
	printf("                           密码错误\n\n");
			}
 
		}
	}
	system("pause");
}
 
void chaoxun()
{
	int account2,exist2,order2;
	printf("                  ▂▃▅▆▇█████▇▆▅▃▂                 \n");
 	printf("☆ =========================================================== ☆\n");
 	printf("                         欢迎使用小小银行                        \n");
 	printf("                        无卡自主ATM服务系统                      \n");
 	printf("☆ =========================================================== ☆\n");
	printf("                         请输入你的账号：");
	scanf("%d",&account2);
	printf("\n");
	exist2=judge_exist(account2);
	if(exist2!=0)
	{
		order2=exist2-100;
	    printf("                          请输入密码:");
		scanf("%s",password2);
		if(strcmp(password2,zh[order2].password)==0)
		{
			switch(zh[order2].status)
			{
			case 0:printf("           账号:%d \n",account2);
			       printf("           姓名：%s\n",zh[order2].username);
				   printf("           状态:正常\n");
				   printf("           余额：%lf\n",zh[order2].money);
				   printf("           手机号码：%s\n",zh[order2].num);
				   printf("           身份证号码：%s\n",zh[order2].id);
				   break;	
			case 1:printf("           账号:%d\n ",account2);
			       printf("           姓名：%s\n",zh[order2].username);
				   printf("           状态:挂失\n");
				   printf("           余额：%lf\n",zh[order2].money);
				   printf("           手机号码：\n%s",zh[order2].num);
				   printf("           身份证号码：\n%s",zh[order2].id);
				   break;	
			case 2:printf("           账号:%d\n ",account2);
			       printf("           姓名：%s\n",zh[order2].username);
				   printf("           状态:销户\n");
				   printf("           余额：%lf\n",zh[order2].money);
				   printf("           手机号码：%s\n",zh[order2].num);
				   printf("           身份证号码：%s\n",zh[order2].id);
			       	break;	
			}
			system("pause");
		}
		else
		{
	        printf("                          密码错误\n\n");
	        system("pause");
		}
	}
}
 
void zhuanzhang()
{
	int exist2,status2,account2,order2,account3,exist3,order3,status3;
	double money2;
	printf("                  ▂▃▅▆▇█████▇▆▅▃▂                 \n");
 	printf("☆ =========================================================== ☆\n");
 	printf("                         欢迎使用小小银行                        \n");
 	printf("                        无卡自主ATM服务系统                      \n");
 	printf("☆ =========================================================== ☆\n");
	printf("                         请输入你的账号：");
	scanf("%d",&account2);
	printf("\n");
	exist2=judge_exist(account2);
	if(exist2!=0)
	{
		order2=account2-100;
		status2=judge_status(zh[order2].status);
		if(status2==0)
		{
	        printf("                         请输入密码:");
			scanf("%s",password2);
			if(strcmp(password2,zh[order2].password)==0)
			{
	             printf("                         户主姓名:%s\n",zh[order2].username);
	printf("                         请输入转账账号：");
				scanf("%d",&account3);
				exist3=judge_exist(account3);
				if(exist3!=0)
				{
					order3=account3-100;
					status3=judge_status(zh[order3].status);
					if(status3==0)
					{
	printf("                        请输入你要转账的金额:");
						scanf("%lf",&money2);
						zh[order2].money=zh[order2].money-money2;
						zh[order3].money=zh[order3].money+money2;
						if(zh[order2].money>=0)
						{
	printf("                        转账成功，你的余额为%lf\n\n",zh[order2].money);
						}
						else
						{
	printf("                        余额不足,转账失败\n\n");
						zh[order2].money=zh[order2].money+money2;
						zh[order3].money=zh[order3].money-money2;
						}
 					}
				}
			}
			else
			{
	printf("                           密码错误\n\n");
			}
 
 
		}
	}
	system("pause");
}
 
void lose()
{
int exist2,account2,order2;
	printf("                  ▂▃▅▆▇█████▇▆▅▃▂                 \n");
 	printf("☆ =========================================================== ☆\n");
 	printf("                         欢迎使用小小银行                        \n");
 	printf("                        无卡自主ATM服务系统                      \n");
 	printf("☆ =========================================================== ☆\n");
	printf("                         请输入你的账号：");
	scanf("%d",&account2);
	printf("\n");
	exist2=judge_exist(account2);
	if(exist2!=0)
	{
		order2=account2-100;
	printf("                         请输入密码:");
		scanf("%s",password2);
		if(strcmp(password2,zh[order2].password)==0)
		{
	printf("                       挂失成功,该卡已挂失\n\n");
		zh[order2].status=1;
		}
		else
		{
	printf("                          密码错误\n\n");
		}
	}
	system("pause");	
}
 
void undo()
{
int exist2,account2,order2;
    printf("                  ▂▃▅▆▇█████▇▆▅▃▂                 \n");
 	printf("☆ =========================================================== ☆\n");
 	printf("                         欢迎使用小小银行                        \n");
 	printf("                        无卡自主ATM服务系统                      \n");
 	printf("☆ =========================================================== ☆\n");
	printf("                          请输入你的账号：");
	scanf("%d",&account2);
	printf("\n");
	exist2=judge_exist(account2);
	if(exist2!=0)
	{
		order2=account2-100;
	printf("                          请输入密码:");
		scanf("%s",password2);
		if(strcmp(password2,zh[order2].password)==0)
		{
	printf("                          解挂成功\n\n");
		zh[order2].status=0;
		}
		else
		{
	printf("                          密码错误\n\n");
		}
	}
	system("pause");	
	
}
 
void xiaohu()
{
int exist2,account2,order2;
	printf("                  ▂▃▅▆▇█████▇▆▅▃▂                 \n");
 	printf("☆ =========================================================== ☆\n");
 	printf("                         欢迎使用小小银行                        \n");
 	printf("                        无卡自主ATM服务系统                      \n");
 	printf("☆ =========================================================== ☆\n");
	printf("                          请输入你的账号：");
	scanf("%d",&account2);
	printf("\n");
	exist2=judge_exist(account2);
	if(exist2!=0)
	{
		order2=account2-100;
	printf("                          请输入密码:");
		scanf("%s",password2);
		if(strcmp(password2,zh[order2].password)==0)
		{
	printf("                          销户成功\n\n");
		zh[order2].account=0;
		}
		else
		{
	printf("                          密码错误\n\n");
		}
	}
	system("pause");	
	
}
 
void xiugai()
{
    int exist2,account2,order2,i;
    char password3[7];
    char password4[7];
	printf("                  ▂▃▅▆▇█████▇▆▅▃▂                 \n");
 	printf("☆ =========================================================== ☆\n");
 	printf("                         欢迎使用小小银行                        \n");
 	printf("                        无卡自主ATM服务系统                      \n");
 	printf("☆ =========================================================== ☆\n");
	printf("                         请输入你的账号：");
	scanf("%d",&account2);
	printf("\n");
	exist2=judge_exist(account2);
	if(exist2!=0)
	{
		order2=account2-100;
	    printf("                         正在验证身份....\n");
	    printf("\n");
	    printf("                         请输入你的密码：");
	    scanf("%s",password2);
	    printf("\n");
	    if(strcmp(password2,zh[order2].password)==0)
	    {
	        printf("                         验证成功请输入新密码:");
            scanf("%s",&zh[order2].password);
            printf("\n");
            printf("                         请再次输入新密码:");
    	    scanf("%s",password3);
    	    printf("\n");
            if(strcmp(password3,zh[order2].password)==0)
            {
                strcpy(zh[order2].password,password3);
   		        printf("                         改密成功\n\n");
   		        system("pause");
	        }
	        else
            {
		   	    printf("                     两次密码不一致,请重新输入\n\n");
		   	    system("pause");
	        }
   	    }
	}
	system("pause");	
}
 
void tuichu()
{
control=2;
}
 
int judge_exist(int a)
{
	int i,j=0;
	for(i=0;i<45;i++)
	{
		if(a==zh[i].account)
		{
			j=1;
			break;
		}
	} 
	    if(j==0)
	    {
		    a=0;
	        printf("                  ▂▃▅▆▇█████▇▆▅▃▂                 \n");
 	        printf("☆ =========================================================== ☆\n");
 	        printf("                         欢迎使用小小银行                        \n");
 	        printf("                        无卡自主ATM服务系统                      \n");
 	        printf("☆ =========================================================== ☆\n");
	        printf("                        对不起该用户不存在\n\n");
	    }
 
	return a;
}
 
int judge_status(int a)
{
	if(a==0)
	{
		return 0;
	}
	if(a==1)
	{
	printf("                  ▂▃▅▆▇█████▇▆▅▃▂                 \n");
 	printf("☆ =========================================================== ☆\n");
 	printf("                         欢迎使用小小银行                        \n");
 	printf("                        无卡自主ATM服务系统                      \n");
 	printf("☆ =========================================================== ☆\n");
	printf("                         该用户已挂失\n\n");
		return 1;
	}
	if(a==2)
	{
	printf("                  ▂▃▅▆▇█████▇▆▅▃▂                 \n");
 	printf("☆ =========================================================== ☆\n");
 	printf("                         欢迎使用小小银行                        \n");
 	printf("                        无卡自主ATM服务系统                      \n");
 	printf("☆ =========================================================== ☆\n");
	printf("                         该用户已被冻结\n\n");
		return 2;
	}
 
	return 0;
}
